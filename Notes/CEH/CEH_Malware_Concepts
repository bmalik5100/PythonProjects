	Malware Concepts and Components:
Malware - Malicious software (umbrella term)
Common ways to spread malware:
  Most common way to spread viruses is from victim to victim (such as email with attachemnts sent to contact list)
  Untrusted software installs (such as torrenting)
  Remote code execution
  Downloader through additional app
  Dropper - downloader that contains malware
  Obfuscator and encryptors - Makes malware as unreadable as possible to avoid AVs and EDRs.
Types of Malware:
  Trojan - Tool that performs a task but deceptively hides malicious activity
  Virus - Malicious Program that spreads through a seperate host such as email attachment
  Worm - Malicious program that self replicate across network. Vulnerable services/hosts are called wormable.
  Ransomware - Program that encrypts files and holding them for digital coin ransom, sometimes connected to fake antiviruses. Targets large industries, especially healthcare and universities
  Adware - PUA (Putentially unwanted app) Invasive advertising on systems
  Spyware - PUA (Potentially unwanted app) Steals computer activity for purposes of advertising
  Rootkit - 
Why do people do this:
  Fame, retaliation, but mostly money
  Use compromised systems to create a distributed botnet
  Use machines as a patsy/pivot to obscure source of attacker
  Diversionary tactic
  
	APTs - Advanced Persistent Threats:
Most sophisticated threat - groups of people with sophisticated capabilities, mostly state-sponsored.
Always have a specific goal in mind, typically sensitive information, PII, IP, PCI.
Maintain access for as long as possible. (Persistence)
Often develop their own zero-day exploits, and cover all disciplines in IT
MITRE - good educational resource for learning about APTs
Examples:
  APT28 - Russian group known as FancyBear
  APT38 - North Korean group known as Lazarus 
  Activists
  State-sponsored organizations

APT Life Cycle:
  Preparation - defining targets, aquiring/creating tools, testing for detections
  Initial Intrusion - deploy tools and establish connection
  Expansion - gain credentials, expand access
  Persistence - Maintain backdoor or other means of access
  Search and Exfiltrate  - gather sensitive data and move to attacker controlled device
  Cleanup - Remove tracks, clear logs
 
	Trojans:
Defnition - type of malware usually a legitimate looking software with malicious payload hidden inside
Install something that 
Purpose:
  Oftentimes used to install further malware or make a host more vulnerable by 
  Establish a backdoor or wa
  Sometimes looks at keystrokes, webcam, microphones
  Establish victim host as a zombie
Types:
  RAT - Remote Access Trojans
  Botnet Trojan - trojan for use as a zombie in an established botnet
  Mobile Trojans -
  Banking - 
  Backdoor Trojans 
  Wiper - Wipes/destroys the device or data

Trojan Deployment:
  Dropper - normal program that drops the second stage payload into a more secretive location and runs it
    Good for bypassing EDR systems or AV
    Second stage could be a downloader, or baked into program
  Downloaders - AV safe program that downloads a Trojan from a remote source
  Wrapper - safe program with malicous code inside the program
  Cryptors - "Safe" program with malicious code that is obfuscated using encryption. Useful for FUD
Prevention of Trojans:
  Don't enable macros
  Download software from trusted sites 
  Don't trust removable media

	Viruses and Worms:
Virus - malicious software that attaches itself to a host file. Self-replicating to other programs/files by users.
Worms - Malicious software that self replicating to systems on a network, typically through zero-days. Does not require human interaction besides activation.  
Famous Viruses:
  Mydoom, Sobig, Klez, ILOVEYOU, WannaCry, Zeus, Code Red, Slammer,CryptoLocker, Sasser, etc
Goals are similar when it comes to viruses: 
  Destruction or damage of systems 
  cyber theft 
  hacktivism
  Fame/Reputation
Inticators of Compromise:
  Poor system performance (resource utilization)
  Unexpected system crashing
  Missing data
Life Cycle of viruses:
  Design - Malicious actor designs/develops new virus
  Replication - virus is released and spreads
  Launch - user downloads and exectes the virus
  Detection - virus is discovered and analyzed by experts
  Incorporation - AV orgs add new virus defenses to their software
  Execution of the damage routing - Removal of viruses with AV software
  
Common Virus Types:
  Boot sector (Elk cloner, stoned)
  File attachments
  Macros (Melissa)
  Polymorphic - Encrypt code with key to disguise signature (Encryption Key, WannaCry, CryptoLocker)
  Metamorphic - Uses no encryption, rewrites itself to disguise signature
  Logic Bombs - event/time triggers event
  Ransomware

	Fileless Malware:
Definition - Malware that does not use files, aka malicious code that gets run in memory
Takes advantage of vulnerabilities to inject malicious code into a memory space.
Methods:
  User goes to malicious website which exploits a browser weakness.
  User accidentally runs macro in malicious file
Classifications of Fileless Malware:
  Evidence:
     Type 1. No file activity is performed
     Type 2. Indirect File Activity (potentially safe file is required)
     Type 3. Some files required (file in and of itself is not malicious, reads a file (does not download) from internet and executes code)
  Entry Points:
    Expoits - initial entry vector is a file, payload is fileless
    Network - such as buffer overflow
    Hardware - malware may be infecting firmware (includes hypervisor)
    Execution and injection:
      File-based: Simple executable -> second stage downloaded and launched into memory
      Macro-based: VBA is used to create a malicious macro, macro is enabled by user.
      Script-based: WMI, Powershell, Bash, Python, JS
      Disk-based: Boot record infection
Process behind a fileless malware infection:
  Step 1. Point of entry:
    Memory Expoits (like eternalblue)
    Malicous Website (such as malicious script execution)
    Phishing email with malicious attachment
    Malicious documents
  Step 2. Code execution:
    Script Based (Powershell, bahsm VBS, etc)
    Code Injection (DLL injection, process hollowing) 
  Step 3. Persistence:
    Could be Registry entries, WMI, Scheduled tasks
  Step 4. Achieving Objectives:
    Recon, credential grabs, sensitive data exfiltration, cyber espionage
How does it sneak past AVs and EDRs?
  Most AVs/EDRs use known signatures in a database.
  Disguise from signatures using code obfuscation
  Outwait behavior monitoring, do normal stuff for a while before malicious stuff
  
	Malware Analysis:
Discovery:
  Typically warning from AV/EDR, or user report of unusual behavior
  Potentially a monitoring system, such as a IDS/IPS
  Sheepdipping - Treat every host on network as infectious until they have been proven disinfected
    Scan with AVs, monitor network activity, services, permissions, registry
Analysis - learn everything you can:
  Static analysis: look at code, compare file hashes with known signatures (upload to virustotal.com or hybrid-analysis.com) 
    PE - Windows Portable Executable File
    ELF - Linux Executable File
    MACHO - MacOS Executable
    In linux, running file can determine file type
    Look for human readable text in file - linux command strings
    Look for code obfuscation
    Disassemble code using GHIDRA
  Dynamic Analysis - What does file look like when running, behavioral analysis
    Look at resource usage - Network, Disc, CPU, Memory
    Look at command and control channel (C2)
    Look for exfiltrating or destroying data
    Look for evidence of spying/keylogging or DDoS
    Tools:
      strace -p [suspicious process id] (tracks the activity of the process)

Ensure you build an ISOLATED test environment when looking at malware 
Crowdstrike falcon used as a sandbox service
Review: 
  Make sure you find attack vectors, share virus signatures, create alerts, discover attribution

	Malware Countermeasures:
Updates and Patches - OS/Software/Firmware:
  Having an update/patch policy that is defined, scheduled and mandatory is ideal
  Extremely useful for tackling malware
Antimalware, Antiviruses, EDRs:
  Ensure tools are running/turned on
  Ensure AV/AM/EDR is updated with latest signatures
Employee Training:
  Make sure that employees are trained on a regular basis
  Don't click links/run attachments in emails
  Look at threat feeds, perhaps run pentesting
Backups:
  Have a defined policy/procedure that is scheduled
  Make sure backups are offsite/onsite
  Ensure it is part of disaster recovery plan
Logging and monitoring:
  Combine digital and human monitoring
  Implement IPS/IDS, file integrity monitors
  Log system auth and login activity
  Implement SIEM, e.g. Splunk
Blocking:
  Block installation of applications that are unnessary, from suspicious sources, etc
  Block network connections
  Create an allowlist or denylist
  Disable powershell or other apps/services/macros if it does not need to be running 
Principle of Least Privilege:
  Give users only permissions they need
  Role based permissions
Defense in Depth:
  Set up multiple strategies and methods of defense.
  Reduce attack surface
  Disable unused services
Use system hardening guides:
  Find an online guide and follow step-by-step procedure

